
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  phone String? @unique
  username String? @unique
  password String 
  profile String?
  bio String?
  dob DateTime 
  isVerified Boolean @default(false)
  verificationCode String?
  verificationCodeExpiry DateTime?
  created_at DateTime @default(now()) @db.Timestamp(0)
  posts Post[]
  likes Like[]
  comments Comment[]
  bookmarks Bookmark[]
  followers Follows[] @relation("following")
  following Follows[] @relation("follower")
}

model Post{
  id Int @id @default(autoincrement())
  title String?
  content String
  image String?
  userId Int 
  user User @relation(fields: [userId],references: [id])
  likes Like[]
  comments Comment[]
  bookmarks Bookmark[]
  createdAt DateTime @default(now())
  updated DateTime @updatedAt
}

model Like{
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId],references: [id])
  postId Int 
  post Post @relation(fields: [postId],references: [id])
  createdAt DateTime @default(now())
}

model Comment{
  id Int @id @default(autoincrement())
  content String
  userId Int
  user User @relation(fields: [userId],references: [id])
  postId Int
  post Post @relation(fields: [postId],references: [id])
  createdAt DateTime @default(now())
}


model Bookmark{
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId],references: [id])
  postId Int 
  post Post @relation(fields: [postId],references: [id])
  createdAt DateTime @default(now())
}



model Follows {
id Int @id @default(autoincrement())
followerId  Int
follower    User @relation("follower", fields: [followerId], references: [id])
followingId Int
following   User @relation("following", fields: [followingId], references: [id]) 
}



